---
title: "nonmajor analysis"
format: html
editor: visual
---

## Non-major Component Units -\> ACFR Scrapping

```{r}
library(janitor)
library(tidyverse)
```

### Data: 2024 - 2015

```{r}
# 2024
nonmajor_data_2024 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2024_data.txt", header = TRUE, sep = "|") %>% 
  clean_names()

# 2023
nonmajor_data_2023 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2023_data.txt", header = TRUE, sep = "|") %>% 
  clean_names()

# 2022
nonmajor_data_2022 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2022_data.txt", header = TRUE, sep = "|") %>% 
  clean_names()

# 2021
nonmajor_data_2021 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2021_data.txt", header = TRUE, sep = "|") %>% 
  clean_names()

# 2020
nonmajor_data_2020 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2020_data.txt", header = TRUE, sep = "|") %>% 
  clean_names()

# 2019
nonmajor_data_2019 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2019_data.txt", header = TRUE, sep = "|") %>% 
  clean_names()

# 2018
nonmajor_data_2018 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2018_data.txt", header = TRUE, sep = "|") %>% 
  clean_names()

# 2017
nonmajor_data_2017 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2017_data.txt", header = TRUE, sep = "|") %>% 
  clean_names()

# 2016
nonmajor_data_2016 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2016_data.txt", header = TRUE, sep = "|") %>% 
  clean_names()

# 2015
nonmajor_data_2015 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2015_data.txt", header = TRUE, sep = "|") %>%
  clean_names()
```

### Data: 2014 - 2004

```{r}
# 2014
nonmajor_data_2014 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2014_data.txt", header = TRUE, sep = "|") %>%
  clean_names()

# 2013
nonmajor_data_2013 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2013_data.txt", header = TRUE, sep = "|") %>%
  clean_names()

# 2012
nonmajor_data_2012 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2012_data.txt", header = TRUE, sep = "|") %>%
  clean_names()

# 2011
nonmajor_data_2011 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2011_data.txt", header = TRUE, sep = "|") %>%
  clean_names()

# 2010
nonmajor_data_2010 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2010_data.txt", header = TRUE, sep = "|") %>%
  clean_names()

# 2009
nonmajor_data_2009 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2009_data.txt", header = TRUE, sep = "|") %>%
  clean_names()

# 2008
nonmajor_data_2008 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2008_data.txt", header = TRUE, sep = "|") %>%
  clean_names()

# 2007
nonmajor_data_2007 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2007_data.txt", header = TRUE, sep = "|") %>%
  clean_names()

# 2006
nonmajor_data_2006 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2006_data.txt", header = TRUE, sep = "|") %>%
  clean_names()
 
# 2005
nonmajor_data_2005 <- read.delim("C:/Users/tkanderson/Documents/Nonmajor Scrapping/non_2005_data.txt", header = TRUE, sep = "|") %>%
  clean_names()
```

## Data Cleaning

### Clean 2024-2015

```{r}
# Need to multiple values by 1000 since tables are expressed in thousands
# remove extra commas in numbers

# Function to handle commas and parentheses
convert_to_numeric <- function(x) {
  x <- gsub(",", "", x)  # Remove commas
  x <- gsub("\\(", "-", x) # Replace parentheses with negative sign
  x <- gsub("\\)", "", x)  # Remove remaining parentheses
  x <- as.numeric(x)
  return(x)
}

# function to iterate through the list of dataframes
process_nonmajor_data <- function(data_list) {
  for (i in seq_along(data_list)) {
    data_list[[i]] <- data_list[[i]] %>%
      mutate(across(utah_communications_authority:total_nonmajor_component_units, #skip to col 5 then to end
                     ~ convert_to_numeric(.x) * 1000))
  }
  return(data_list)
}

# Create a list of dataframes
data_list_clean <- list(nonmajor_data_2024,nonmajor_data_2023, nonmajor_data_2022,nonmajor_data_2021,nonmajor_data_2020,nonmajor_data_2019,nonmajor_data_2018,nonmajor_data_2017,nonmajor_data_2016,nonmajor_data_2015)

# Process the dataframes using the modified function
data_list_clean <- process_nonmajor_data(data_list_clean)

# Update the original dataframe names with the processed data.
nonmajor_data_2024 <- data_list_clean[[1]]
nonmajor_data_2023 <- data_list_clean[[2]]
nonmajor_data_2022 <- data_list_clean[[3]]
nonmajor_data_2021 <- data_list_clean[[4]]
nonmajor_data_2020 <- data_list_clean[[5]]
nonmajor_data_2019 <- data_list_clean[[6]]
nonmajor_data_2018 <- data_list_clean[[7]]
nonmajor_data_2017 <- data_list_clean[[8]]
nonmajor_data_2016 <- data_list_clean[[9]]
nonmajor_data_2015 <- data_list_clean[[10]]

options(scipen = 999)
```

### Clean 2014-2005

```{r}
# function to iterate through the list of dataframes
process_nonmajor_data <- function(data_list) {
  for (i in seq_along(data_list)) {
    data_list[[i]] <- data_list[[i]] %>%
      mutate(across(comprehensive_health_insurance_pool:total_nonmajor_component_units, #skip to col 5 then to end
                     ~ convert_to_numeric(.x) * 1000))
  }
  return(data_list)
}

# Create a list of dataframes
data_list_clean <- list(nonmajor_data_2014,nonmajor_data_2013,nonmajor_data_2012,nonmajor_data_2011,nonmajor_data_2010,nonmajor_data_2009,nonmajor_data_2008,nonmajor_data_2007,nonmajor_data_2006,nonmajor_data_2005)

# Process the dataframes using the modified function
data_list_clean <- process_nonmajor_data(data_list_clean)

# Update the original dataframe names with the processed data.
nonmajor_data_2014 <- data_list_clean[[1]]
nonmajor_data_2013 <- data_list_clean[[2]]
nonmajor_data_2012 <- data_list_clean[[3]]
nonmajor_data_2011 <- data_list_clean[[4]]
nonmajor_data_2010 <- data_list_clean[[5]]
nonmajor_data_2009 <- data_list_clean[[6]]
nonmajor_data_2008 <- data_list_clean[[7]]
nonmajor_data_2007 <- data_list_clean[[8]]
nonmajor_data_2006 <- data_list_clean[[9]]
nonmajor_data_2005 <- data_list_clean[[10]]

options(scipen = 999)
```

```{r}
sapply(nonmajor_data_2024, class)
```

## Verification Checks

### Checking 2024

```{r}
total_2024 <- nonmajor_data_2011 %>%
  summarize(total = sum(total_nonmajor_component_units, na.rm = TRUE))
total_2024

other_numeric_sums <- nonmajor_data_2011 %>%
  select_if(is.numeric) %>%
  select(-total_nonmajor_component_units, -fiscal_year) %>% 
  summarize_all(sum, na.rm = TRUE) %>%
  sum()

# check by rows instead
row_sums <- nonmajor_data_2011 %>%
  select_if(is.numeric) %>%
  select(-total_nonmajor_component_units, -fiscal_year) %>%
  rowSums(na.rm = TRUE)

# compare rows to total value
comparison <- nonmajor_data_2011 %>%
  mutate(row_sum_check = row_sums == total_nonmajor_component_units) %>% 
  select(line_item, row_sum_check)

# Use tolerance for comparison due to potential floating-point precision issues
tolerance <- 1e-6 # Define a very small tolerance

  if (abs(other_numeric_sums - total_2024) < tolerance) {
    print("The sum of all other numeric columns is equal to the total_nonmajor_component_units sum.")
  } else {
    print("The sum of all other numeric columns is NOT equal to the total_nonmajor_component_units sum.")
    print(paste("Total of total_nonmajor_component_units:", total_2024))
    print(paste("Sum of other numeric columns:", other_numeric_sums))
  }
```

### Checking ALL years

```{r}
# Define the years to check
years <- 2024:2020  # Adjust as needed

for (year in years) {
  # Construct the data frame name
  data_name <- paste0("nonmajor_data_", year)

  # Check if the data frame exists
  if (exists(data_name)) {
    # Access the data frame using get()
    data <- get(data_name)

    # Perform calculations
    total <- data %>%
      summarize(total = sum(total_nonmajor_component_units, na.rm = TRUE)) %>%
      pull(total)

    other_numeric_sums <- data %>%
      select_if(is.numeric) %>%
      select(-total_nonmajor_component_units, -fiscal_year) %>%
      summarize_all(sum, na.rm = TRUE) %>%
      sum()

    # check by rows instead
    row_sums <- data %>%
      select_if(is.numeric) %>%
      select(-total_nonmajor_component_units, -fiscal_year) %>%
      rowSums(na.rm = TRUE)

    # compare rows to total value
    comparison <- data %>%
      mutate(row_sum_check = row_sums == total_nonmajor_component_units) %>%
      select(line_item, row_sum_check)

    # Print the results for the current year
    cat("-------------------- Year:", year, "--------------------\n")
    print("Total calculated from total_nonmajor_component_units:")
    print(total)

    print("Total calculated from summing all other numeric columns:")
    print(other_numeric_sums)

    # Print the comparison results
    print(comparison)

  }
}
```

## Combine 20 years

```{r}
# iterative process

# Initialize an empty list to hold your data frames
data_list <- list()

# Populate the list with 20 data frames
data_list[["nonmajor_data_2024"]] <- nonmajor_data_2024
data_list[["nonmajor_data_2023"]] <- nonmajor_data_2023
data_list[["nonmajor_data_2022"]] <- nonmajor_data_2022
data_list[["nonmajor_data_2021"]] <- nonmajor_data_2021
data_list[["nonmajor_data_2020"]] <- nonmajor_data_2020
data_list[["nonmajor_data_2019"]] <- nonmajor_data_2019
data_list[["nonmajor_data_2018"]] <- nonmajor_data_2018
data_list[["nonmajor_data_2017"]] <- nonmajor_data_2017
data_list[["nonmajor_data_2016"]] <- nonmajor_data_2016
data_list[["nonmajor_data_2015"]] <- nonmajor_data_2015
data_list[["nonmajor_data_2014"]] <- nonmajor_data_2014
data_list[["nonmajor_data_2013"]] <- nonmajor_data_2013
data_list[["nonmajor_data_2012"]] <- nonmajor_data_2012
data_list[["nonmajor_data_2011"]] <- nonmajor_data_2011
data_list[["nonmajor_data_2010"]] <- nonmajor_data_2010
data_list[["nonmajor_data_2009"]] <- nonmajor_data_2009
data_list[["nonmajor_data_2008"]] <- nonmajor_data_2008
data_list[["nonmajor_data_2007"]] <- nonmajor_data_2007
data_list[["nonmajor_data_2006"]] <- nonmajor_data_2006
data_list[["nonmajor_data_2005"]] <- nonmajor_data_2005

# Get the year from the name
names(data_list)

# Initialize the combined data with the first data frame (2024)
combined_data <- data_list[[1]]

# Iterate through the remaining data frames
for (i in 2:length(data_list)) {
  # Get the next data frame
  next_data <- data_list[[i]]

  # Find the common columns
  common_cols <- intersect(names(combined_data), names(next_data))

  # Print the common columns (optional, but good for debugging)
  print(paste("Merging with", names(data_list)[i], "using columns:", paste(common_cols, collapse = ", ")))

  # Merge the data
  combined_data <- merge(combined_data, next_data, by = common_cols, all = TRUE)
}

nonmajor_data_2024to2005 <- combined_data %>% 
  arrange(desc(fiscal_year))
```

### Full Object Created!
